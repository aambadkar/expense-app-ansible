- name: setup backend
  hosts: all
  become: yes
  tasks:
    - name: install nodejs
      ansible.builtin.shell: https://rpm.nodesource.com/setup_lts.x | bash

    - name: install nodejs
      ansible.builtin.dnf:
        name: nodejs
        state: present

    - name: copy backend service
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service

    - name: Add application user
      ansible.builtin.user:
        name: expense

    - name: clean old contents
      ansible.builtin.file:
        path: /app
        state: absent

    - name: add directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download and extract backend contents
      ansible.builtin.unarchive:
        src: https://expense-artifacts.s3.amazonaws.com/backend.zip
        dest: /app
        remote_src: yes

    - name: download dependencies
      ansible.builtin.shell: npm install
      args:
        chdir: /app

    - name: install mysql client
      ansible.builtin.dnf:
        name: mysql

    - name: load schema
      ansible.builtin.shell: mysql -h mysql.devopsa17.online -uroot -pExpenseApp@1 < /app/schema/backend.sql

    - name: start backend service
      ansible.builtin.systemd:
        name: backend
        state: restarted
        enabled: yes
        daemon-reload: yes














#echo start backend service
#systemctl daemon-reload &>>$log_file
#systemctl enable backend &>>$log_file
#systemctl restart backend &>>$log_file
#stat_check
#
#echo install mysql client
#dnf install mysql -y &>>$log_file
#stat_check
#
#echo load the schema
#mysql_root_password=$1
#mysql -h mysql.devopsa17.online -uroot -p$mysql_root_password < /app/schema/backend.sql &>>$log_file
#stat_check